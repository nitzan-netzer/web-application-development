{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for our application",
    "version": "1.0.0",
    "title": "Second Leg API"
  },
  "host": "localhost:3001",
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication related endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "This endpoint registers a new user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User registration info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in a user",
        "description": "This endpoint logs in a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/requestToSell": {
      "post": {
        "summary": "user request to sell products",
        "description": "This endpoint makes the user a seller",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User request to sell products",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequestToSell"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "RequestToSell successful"
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/product/create": {
      "post": {
        "summary": "Create a new product",
        "description": "This endpoint creates a new product",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product creation info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCreation"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid userId format or other validation errors"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/product/update": {
      "post": {
        "summary": "Update an existing product",
        "description": "This endpoint updates an existing product",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product update info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductCreation"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "productId",
            "description": "ID of the product to update",
            "required": true,
            "type": "string",
            "example": "603d53a7a262f90b60d8dbd0"
          }
        ],
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "404": {
            "description": "User or Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/product/product/{productId}": {
      "delete": {
        "summary": "Delete an existing product",
        "description": "This endpoint deletes an existing product",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "user id info",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteProduct"
            }
          },
          {
            "in": "path",
            "name": "productId",
            "description": "ID of the product to delete",
            "required": true,
            "type": "string",
            "example": "603d53a7a262f90b60d8dbd0"
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "User or Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/product/products/{productId}": {
      "get": {
        "summary": "Get a product by ID",
        "description": "This endpoint fetches a product by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "productId",
            "description": "ID of the product to fetch",
            "required": true,
            "type": "string",
            "example": "603d53a7a262f90b60d8dbd0"
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Product fetched successfully"
          },
          "404": {
            "description": "Product not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/product/allProducts": {
      "get": {
        "summary": "Get all products",
        "description": "This endpoint fetches all products",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Products fetched successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/product/getAllStatisticsOnProducts": {
      "get": {
        "summary": "Get all products statistics on products",
        "description": "This endpoint fetches all products",
        "parameters": [
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Products statistics fetched successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/purchase/makeTransaction": {
      "post": {
        "summary": "Purchase products",
        "description": "This endpoint allows users to purchase products",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Purchase information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          },
          {
              "in": "header",
              "name": "x-auth-token",
              "description": "Bearer JWT token",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Purchase successful"
          },
          "404": {
            "description": "User or Product not found"
          },
          "400": {
            "description": "Invalid quantity or product status/availability issues"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/adminRoutes/deleteUser": {
      "delete": {
        "summary": "Delete an existing user",
        "description": "This endpoint deletes an existing user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be blocked",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDelete"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/adminRoutes/blockUser": {
      "post": {
        "summary": "Blocks a user",
        "description": "This endpoint blocks a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be blocked",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserBlock"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid userId format or other validation errors"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/adminRoutes/removeBlock": {
      "post": {
        "summary": "removes block from a user",
        "description": "This endpoint remove blocks a user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be blocked",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRemoveBlock"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid userId format or other validation errors"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/adminRoutes/allUsers": {
      "post": {
        "summary": "Get all users",
        "description": "This endpoint fetches all users",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User to be blocked",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAllUsers"
            }
          },
          {
            "in": "header",
            "name": "x-auth-token",
            "description": "Bearer JWT token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "users fetched successfully"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "definitions": {
    "UserRegistration": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "Adirana"
        },
        "name": {
          "type": "string",
          "example": "Adirana Smith"
        },
        "email": {
          "type": "string",
          "example": "adirana.smith@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        },
        "birthYear": {
          "type": "integer",
          "example": 1985
        },
        "address": {
          "type": "string",
          "example": "123 Elm Street"
        },
        "gender": {
          "type": "string",
          "example": "female"
        },
        "isSeller": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "emailOrUsername": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "password123"
        }
      }
    },
    "DeleteProduct": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        }
      }
    },
    "UserBlock": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        },
        "userToBlock": {
          "type": "string",
          "example": "userId"
        }
      }
    },
    "UserRemoveBlock": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        },
        "userToRemoveBlock": {
          "type": "string",
          "example": "userId"
        }
      }
    },
    "UserRequestToSell": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        }
      }
    },
    "GetAllUsers": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        }
      }
    },
    "UserDelete": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "userId"
        },
        "userToDelete": {
          "type": "string",
          "example": "userId"
        }
      }
    },
    "ProductCreation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Product Name"
        },
        "image": {
          "type": "string",
          "example": "Product image"
        },
        "category": {
          "type": "string",
          "example": "Electronics"
        },
        "status": {
          "type": "string",
          "example": "available/soldOut"
        },
        "description": {
          "type": "string",
          "example": "This is a great product."
        },
        "price": {
          "type": "number",
          "example": 99.99
        },
        "userId": {
          "type": "string",
          "example": "603d53a7a262f90b60d8dbcf"
        },
        "quantity": {"type": "number", "example": 1}
      }
    },
    "ProductUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Updated Product Name"
        },
        "image": {
          "type": "string",
          "example": "image.png"
        },
        "category": {
          "type": "string",
          "example": "Updated Electronics"
        },
        "status": {
          "type": "string",
          "example": "available"
        },
        "description": {
          "type": "string",
          "example": "This is an updated great product."
        },
        "price": {
          "type": "number",
          "example": 119.99
        }
      }
    },
    "Purchase": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "example": "603d53a7a262f90b60d8dbcf"
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "productId": {
                "type": "string",
                "example": "603d53a7a262f90b60d8dbd0"
              },
              "quantity": {
                "type": "integer",
                "example": 2
              }
            }
          }
        }
      }
    }
  }
}
